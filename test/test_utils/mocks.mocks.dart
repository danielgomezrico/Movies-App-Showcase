// Mocks generated by Mockito 5.4.4 from annotations
// in movie_flutter/test/test_utils/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:chopper/chopper.dart' as _i10;
import 'package:flutter/material.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i12;
import 'package:movie_flutter/api/repositories/models/movie.dart' as _i9;
import 'package:movie_flutter/api/repositories/models/movie_sort.dart' as _i8;
import 'package:movie_flutter/api/repositories/models/movie_summary.dart'
    as _i7;
import 'package:movie_flutter/api/repositories/movies_repository.dart' as _i4;
import 'package:movie_flutter/common/result.dart' as _i6;
import 'package:movie_flutter/common/router/router.dart' as _i11;
import 'package:movie_flutter/common/router/site.dart' as _i13;
import 'package:result_monad/src/result_monad_base.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T, E> extends _i1.SmartFake implements _i2.Result<T, E> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGlobalKey_1<T extends _i3.State<_i3.StatefulWidget>>
    extends _i1.SmartFake implements _i3.GlobalKey<T> {
  _FakeGlobalKey_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MoviesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesRepository extends _i1.Mock implements _i4.MoviesRepository {
  MockMoviesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<
      _i2.Result<_i6.PagedContent<List<_i7.MovieSummary>>, dynamic>> getMovies(
    int? page,
    _i8.MovieSort? sort,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [
            page,
            sort,
          ],
        ),
        returnValue: _i5.Future<
                _i2.Result<_i6.PagedContent<List<_i7.MovieSummary>>,
                    dynamic>>.value(
            _FakeResult_0<_i6.PagedContent<List<_i7.MovieSummary>>, dynamic>(
          this,
          Invocation.method(
            #getMovies,
            [
              page,
              sort,
            ],
          ),
        )),
      ) as _i5.Future<
          _i2.Result<_i6.PagedContent<List<_i7.MovieSummary>>, dynamic>>);

  @override
  _i5.Future<_i2.Result<_i9.Movie, dynamic>> get(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [movieId],
        ),
        returnValue: _i5.Future<_i2.Result<_i9.Movie, dynamic>>.value(
            _FakeResult_0<_i9.Movie, dynamic>(
          this,
          Invocation.method(
            #get,
            [movieId],
          ),
        )),
      ) as _i5.Future<_i2.Result<_i9.Movie, dynamic>>);

  @override
  _i5.Future<_i2.Result<T, dynamic>> responseToResult<T>(
          _i5.Future<_i10.Response<T>> Function()? doRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #responseToResult,
          [doRequest],
        ),
        returnValue:
            _i5.Future<_i2.Result<T, dynamic>>.value(_FakeResult_0<T, dynamic>(
          this,
          Invocation.method(
            #responseToResult,
            [doRequest],
          ),
        )),
      ) as _i5.Future<_i2.Result<T, dynamic>>);
}

/// A class which mocks [Router].
///
/// See the documentation for Mockito's code generation for more information.
class MockRouter extends _i1.Mock implements _i11.Router {
  MockRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GlobalKey<_i3.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_1<_i3.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i3.GlobalKey<_i3.NavigatorState>);

  @override
  String get initialRoute => (super.noSuchMethod(
        Invocation.getter(#initialRoute),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.getter(#initialRoute),
        ),
      ) as String);

  @override
  _i5.Future<T?> pushTo<T extends _i13.SiteResult?>(_i13.Site<T>? site) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushTo,
          [site],
        ),
        returnValue: _i5.Future<T?>.value(),
      ) as _i5.Future<T?>);

  @override
  _i5.Future<_i2.Result<T?, dynamic>> replaceTo<T extends _i13.SiteResult>(
          _i13.Site<T>? route) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceTo,
          [route],
        ),
        returnValue: _i5.Future<_i2.Result<T?, dynamic>>.value(
            _FakeResult_0<T?, dynamic>(
          this,
          Invocation.method(
            #replaceTo,
            [route],
          ),
        )),
      ) as _i5.Future<_i2.Result<T?, dynamic>>);

  @override
  void pop<T extends _i2.Result<T, dynamic>>([T? result]) => super.noSuchMethod(
        Invocation.method(
          #pop,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Route<dynamic>? onGenerateRoute(_i3.RouteSettings? settings) =>
      (super.noSuchMethod(Invocation.method(
        #onGenerateRoute,
        [settings],
      )) as _i3.Route<dynamic>?);
}
