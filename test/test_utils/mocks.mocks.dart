// Mocks generated by Mockito 5.4.4 from annotations
// in movie_flutter/test/test_utils/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:chopper/chopper.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i12;
import 'package:movie_flutter/api/repositories/models/movie.dart' as _i8;
import 'package:movie_flutter/api/repositories/models/movie_sort.dart' as _i7;
import 'package:movie_flutter/api/repositories/models/movie_summary.dart'
    as _i6;
import 'package:movie_flutter/api/repositories/movies_repository.dart' as _i3;
import 'package:movie_flutter/api/repositories/storages/favorite_movie_storage.dart'
    as _i14;
import 'package:movie_flutter/api/repositories/storages/favorite_movie_summary_storage.dart'
    as _i13;
import 'package:movie_flutter/common/database/storage.dart' as _i19;
import 'package:movie_flutter/common/date_formatter.dart' as _i11;
import 'package:movie_flutter/common/event_bus.dart' as _i10;
import 'package:movie_flutter/common/result.dart' as _i5;
import 'package:movie_flutter/common/use_case/find_favorite_movie_summaries_use_case.dart'
    as _i18;
import 'package:movie_flutter/common/use_case/is_movie_favorite_use_case.dart'
    as _i16;
import 'package:movie_flutter/common/use_case/remove_favorite_movie_use_case.dart'
    as _i17;
import 'package:movie_flutter/common/use_case/save_favorite_movie_use_case.dart'
    as _i15;
import 'package:result_monad/src/result_monad_base.dart' as _i2;

import 'mocks.dart' as _i20;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T, E> extends _i1.SmartFake implements _i2.Result<T, E> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MoviesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesRepository extends _i1.Mock implements _i3.MoviesRepository {
  MockMoviesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
      _i2.Result<_i5.PagedContent<List<_i6.MovieSummary>>, dynamic>> getMovies(
    int? page,
    _i7.MovieSort? sort,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [
            page,
            sort,
          ],
        ),
        returnValue: _i4.Future<
                _i2.Result<_i5.PagedContent<List<_i6.MovieSummary>>,
                    dynamic>>.value(
            _FakeResult_0<_i5.PagedContent<List<_i6.MovieSummary>>, dynamic>(
          this,
          Invocation.method(
            #getMovies,
            [
              page,
              sort,
            ],
          ),
        )),
      ) as _i4.Future<
          _i2.Result<_i5.PagedContent<List<_i6.MovieSummary>>, dynamic>>);

  @override
  _i4.Future<_i2.Result<_i8.Movie, dynamic>> get(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [movieId],
        ),
        returnValue: _i4.Future<_i2.Result<_i8.Movie, dynamic>>.value(
            _FakeResult_0<_i8.Movie, dynamic>(
          this,
          Invocation.method(
            #get,
            [movieId],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i8.Movie, dynamic>>);

  @override
  _i4.Future<_i2.Result<T, dynamic>> responseToResult<T>(
          _i4.Future<_i9.Response<T>> Function()? doRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #responseToResult,
          [doRequest],
        ),
        returnValue:
            _i4.Future<_i2.Result<T, dynamic>>.value(_FakeResult_0<T, dynamic>(
          this,
          Invocation.method(
            #responseToResult,
            [doRequest],
          ),
        )),
      ) as _i4.Future<_i2.Result<T, dynamic>>);
}

/// A class which mocks [EventBus].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventBus extends _i1.Mock implements _i10.EventBus {
  MockEventBus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<T> events<T extends _i10.BusEvent>() => (super.noSuchMethod(
        Invocation.method(
          #events,
          [],
        ),
        returnValue: _i4.Stream<T>.empty(),
      ) as _i4.Stream<T>);

  @override
  void fire<T extends _i10.BusEvent>(T? event) => super.noSuchMethod(
        Invocation.method(
          #fire,
          [event],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DateFormatter].
///
/// See the documentation for Mockito's code generation for more information.
class MockDateFormatter extends _i1.Mock implements _i11.DateFormatter {
  MockDateFormatter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String formatDate(DateTime? dateTime) => (super.noSuchMethod(
        Invocation.method(
          #formatDate,
          [dateTime],
        ),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.method(
            #formatDate,
            [dateTime],
          ),
        ),
      ) as String);
}

/// A class which mocks [FavoriteMovieSummaryStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteMovieSummaryStorage extends _i1.Mock
    implements _i13.FavoriteMovieSummaryStorage {
  MockFavoriteMovieSummaryStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  _i4.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.Result<_i6.MovieSummary, dynamic>> get(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [movieId],
        ),
        returnValue: _i4.Future<_i2.Result<_i6.MovieSummary, dynamic>>.value(
            _FakeResult_0<_i6.MovieSummary, dynamic>(
          this,
          Invocation.method(
            #get,
            [movieId],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i6.MovieSummary, dynamic>>);

  @override
  _i4.Future<_i2.Result<List<_i6.MovieSummary>, dynamic>> getAll() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Result<List<_i6.MovieSummary>, dynamic>>.value(
                _FakeResult_0<List<_i6.MovieSummary>, dynamic>(
          this,
          Invocation.method(
            #getAll,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i6.MovieSummary>, dynamic>>);

  @override
  _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>> append(
          _i6.MovieSummary? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #append,
          [movie],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>.value(
            _FakeResult_0<_i5.EmptyContent, dynamic>(
          this,
          Invocation.method(
            #append,
            [movie],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>);

  @override
  _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>> delete(
          _i6.MovieSummary? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [movie],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>.value(
            _FakeResult_0<_i5.EmptyContent, dynamic>(
          this,
          Invocation.method(
            #delete,
            [movie],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>);

  @override
  _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>> deleteAll() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>.value(
            _FakeResult_0<_i5.EmptyContent, dynamic>(
          this,
          Invocation.method(
            #deleteAll,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>);
}

/// A class which mocks [FavoriteMovieStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteMovieStorage extends _i1.Mock
    implements _i14.FavoriteMovieStorage {
  MockFavoriteMovieStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  _i4.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.Result<_i8.Movie, dynamic>> get(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [movieId],
        ),
        returnValue: _i4.Future<_i2.Result<_i8.Movie, dynamic>>.value(
            _FakeResult_0<_i8.Movie, dynamic>(
          this,
          Invocation.method(
            #get,
            [movieId],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i8.Movie, dynamic>>);

  @override
  _i4.Future<_i2.Result<List<_i8.Movie>, dynamic>> getAll() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<List<_i8.Movie>, dynamic>>.value(
            _FakeResult_0<List<_i8.Movie>, dynamic>(
          this,
          Invocation.method(
            #getAll,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i8.Movie>, dynamic>>);

  @override
  _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>> append(_i8.Movie? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #append,
          [movie],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>.value(
            _FakeResult_0<_i5.EmptyContent, dynamic>(
          this,
          Invocation.method(
            #append,
            [movie],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>);

  @override
  _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>> delete(_i8.Movie? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [movie],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>.value(
            _FakeResult_0<_i5.EmptyContent, dynamic>(
          this,
          Invocation.method(
            #delete,
            [movie],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>);

  @override
  _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>> deleteAll() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>.value(
            _FakeResult_0<_i5.EmptyContent, dynamic>(
          this,
          Invocation.method(
            #deleteAll,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>);
}

/// A class which mocks [SaveFavoriteMovieUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveFavoriteMovieUseCase extends _i1.Mock
    implements _i15.SaveFavoriteMovieUseCase {
  MockSaveFavoriteMovieUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>> call(
    _i8.Movie? movie,
    _i6.MovieSummary? summary,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            movie,
            summary,
          ],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>.value(
            _FakeResult_0<_i5.EmptyContent, dynamic>(
          this,
          Invocation.method(
            #call,
            [
              movie,
              summary,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>);
}

/// A class which mocks [IsMovieFavoriteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsMovieFavoriteUseCase extends _i1.Mock
    implements _i16.IsMovieFavoriteUseCase {
  MockIsMovieFavoriteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<bool, dynamic>> call(_i8.Movie? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [movie],
        ),
        returnValue: _i4.Future<_i2.Result<bool, dynamic>>.value(
            _FakeResult_0<bool, dynamic>(
          this,
          Invocation.method(
            #call,
            [movie],
          ),
        )),
      ) as _i4.Future<_i2.Result<bool, dynamic>>);
}

/// A class which mocks [RemoveFavoriteMovieUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveFavoriteMovieUseCase extends _i1.Mock
    implements _i17.RemoveFavoriteMovieUseCase {
  MockRemoveFavoriteMovieUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>> call(
    _i8.Movie? movie,
    _i6.MovieSummary? summary,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            movie,
            summary,
          ],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>.value(
            _FakeResult_0<_i5.EmptyContent, dynamic>(
          this,
          Invocation.method(
            #call,
            [
              movie,
              summary,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>);
}

/// A class which mocks [FindFavoriteMovieSummariesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFindFavoriteMovieSummariesUseCase extends _i1.Mock
    implements _i18.FindFavoriteMovieSummariesUseCase {
  MockFindFavoriteMovieSummariesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<List<_i6.MovieSummary>, dynamic>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Result<List<_i6.MovieSummary>, dynamic>>.value(
                _FakeResult_0<List<_i6.MovieSummary>, dynamic>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i6.MovieSummary>, dynamic>>);
}

/// A class which mocks [Storage].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorage extends _i1.Mock implements _i19.Storage {
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i20.name(),
        returnValueForMissingStub: _i20.name(),
      ) as String);

  @override
  _i4.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>> deleteAll() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>.value(
            _FakeResult_0<_i5.EmptyContent, dynamic>(
          this,
          Invocation.method(
            #deleteAll,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>.value(
                _FakeResult_0<_i5.EmptyContent, dynamic>(
          this,
          Invocation.method(
            #deleteAll,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.EmptyContent, dynamic>>);
}
